env_variables:
  - &DB "${{DB}}/mm10"
  - &SCRIPTS "${{SCRIPTS}}"

seq_info_format:
- ','
- project
- idir
- seq1
- seq2
seq_order:
  - 1
  - 2
  - 3
config_ids: 
  - DEFAULT

DEFAULT:
  cmd_fusion_order: ['1', 2,"STAT"] #Keep "STAT" in, for stat workflows
  cmd_name: mnase.cmd.txt
  log_name: mnase.log
  outdir : mnase_out
  data_name: data.yaml

  order:
    - get_fq
    - trim_pe
    - bowtie2
    - sort_and_markdup
    - to_fragment
    - pileup
    - cam

  order_stat: 
    - stat_log
    - stat_echo

  workflow:
    get_fq:
      need: true
      cmd_part: "1"
      outdir: "1.raw_data"
      father:
        idir:
          - raw
          - idir
        seq1:
          - raw
          - seq1
        seq2:
          - raw
          - seq2
      variables:
        oseq1: "{outdir}/{project}.R1.fq.gz"
        oseq2: "{outdir}/{project}.R2.fq.gz"
      params:
        blank:
          - "cd {idir} "
          - "&& chmod 555 {seq1} "
          - "&& chmod 555 {seq2} "
          - "&& echo {seq1} | tr , ' ' | xargs cat > {oseq1} "
          - "&& echo {seq2} | tr , ' ' | xargs cat > {oseq2} "
      outparams:
        oseq1: "{oseq1}"
        oseq2: "{oseq2}"

    trim_pe:
      path: " "
      check_paths: []
      cmd_part: '1'
      father:
        iseq1:
        - get_fq
        - oseq1
        iseq2:
        - get_fq
        - oseq2
      need: true
      outdir: 1.trimed
      variables:
        log: "{outdir}/{project}.{part}.log"
      outparams:
        oseq1: "{outdir}/{project}_val_1.fq.gz"
        oseq2: "{outdir}/{project}_val_2.fq.gz"
      params:
        blank:
          - "trim_galore --paired --cores 2 --fastqc --quality 20 --length 20 -o {outdir} --basename {project}  {iseq1} {iseq2} "
          - " 2>&1 | tee {log}  "
          - "&& rm {iseq1} {iseq2}"
      
    bowtie2:
      need: true
      outdir: 2.mapping
      path: ""
      father: 
        iseq1:
          - trim_pe
          - oseq1
        iseq2:
          - trim_pe
          - oseq2
      variables:
        olog: "{outdir}/{project}.mapping.log"
        osam: "{outdir}/{project}.sam"
        obam: "{outdir}/{project}.bam"
        threads: 10
        db: *DB
      params:
        blank:
          - "bowtie2 -q -x {db}/mm10_main --no-discordant --threads {threads} -1 {iseq1} -2 {iseq2} -S {osam} 2>&1 | tee {olog} "
          - " && samtools view --threads {threads} -f 0x2 -q 30 -o {obam} {osam} "
          - " && rm {osam} "
      outparams:
        osam: "{osam}"
        obam: "{obam}"
        olog: "{olog}"


    sort_and_markdup: 
      need: true
      path: " "
      outdir: 3.cleanBam
      father:
        ibam:
          - bowtie2
          - obam
      variables:
        sort_bam: "{outdir}/{project}.sort"
        fixmate: "{outdir}/{project}.fix"
        fixsort: "{outdir}/{project}.fix.sort"
        cleanbam: "{outdir}/{project}_clean.bam"
      
      params:
        blank:
          - "sambamba markdup -r -t 10 {ibam} {sort_bam} &&"
          - "sambamba sort -t 10 {sort_bam} -o {cleanbam} &&"
          - "rm {sort_bam} "
    
      
      outparams:
        obam: "{cleanbam}"

    to_fragment:
      need: true
      path: " "
      outdir: 3.cleanBam
      father:
        ibam:
          - sort_and_markdup
          - obam 
      variables:
        obed: "{outdir}/{project}.fragment.bed"
        obed_center: "{outdir}/{project}.centre.bed"
        obed_reads: "{outdir}/{project}.reads.bed"
        max_len: 200 ## source from deeptools default params
        min_len: 130 ## source from deeptools default params
        flank: 1 ## how many base of center flank used in each fragment
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/bamtobedpe.sh"
      params:
        blank:
          - "bash {script} {ibam} 8 | sort -k1,1 -k2,2n  > {obed} "
          - "&& cat {obed} | awk '$3-$2<{max_len} ' |  awk '$3-$2>{min_len} ' | "
          - "   awk 'BEGIN{{OFS=\"\t\"}}{{mean=int(($2+$3)/2);$2=mean-{flank}; $3=mean+{flank};print $0 }}' | cut -f 1-3 > {obed_center}  "
          - "&& bamToBed -i {ibam} | awk 'BEGIN{{OFS=\"\\t\"}}{{split($4, a, \"/\");$7=a[1];print $0 }}'  | sort -k1,1 -k7,7 -k2,2n | cut -f 1-6  > {obed_reads}"
      outparams:
        obed: "{obed}"
        obed_center: "{obed_center}"
        obed_reads: "{obed_reads}"

    pileup:
      need: true 
      path: " "
      outdir: "4.bw"
      father:
        ibed:
          - to_fragment
          - obed_center
      variables:
        db: *DB
        chromSize: "{db}/mm10_main.chrom.sizes"
        bdg: "{outdir}/{project}.bdg"
        obw: "{outdir}/{project}.bw"
      params:
        blank:
          - "n=`cat {ibed} | wc -l  ` "
          - "&& c=`echo \"1000000/$n \" | bc  -l ` "
          - "&& bedtools genomecov -bga -i {ibed} -scale $c -g {chromSize} > {bdg}"
          - "&&  bedGraphToBigWig {bdg} {chromSize} {obw} "
          - "&& rm {bdg} &"

      outparams:
        obw: "{obw}"

    cam:
      need: true 
      path: " "
      outdir: "5.cam"
      overwrite: true
      father:
        ibed:
          - to_fragment
          - obed_reads
      variables:
        db: *DB
        seqtype: "PE"
        name:  "{project}"
        species: "mm10"
        fa: "{db}/mm10_main.fa"
        index: "{db}/mm10_main"
        threads: 8
        olog: "{outdir}/{project}/{project}.cam.log"
      params:
        blank:
          - "cd {outdir} "
          - "&& if [[ ! -e {outdir}/{project} ]];then  mkdir -p {outdir}/{project} ; fi"
          - "&& CAM.py simple -t {seqtype} -n {name} -s {species} --fa {fa} --mapindex {index} -p {threads} -f  -a {ibed}  2>&1 | tee {olog}"

              
  stat: 
    stat_log:
      need: true 
      outdir: "0.stat"
      path: " "
      iparams_list:
        bowtie2:
          - bowtie2
          - olog
          - ","
        projects:
          - raw
          - project
          - ","
      variables:
        script_dir: *SCRIPTS
        script: "{script_dir}/extract_log.py"
        oname: "{outdir}/0.basic.stats"
      params:
        "python" : "{script}"
        "-b": "{bowtie2}"
        "-p": "{projects}"
        "-o": "{oname}"
      outparams:
        oname: "oname"

    stat_echo:
      need: true 
      outdir: "0.stat"
      path: " "
      variables:
        oname: "{outdir}/datainfo.csv"
      iparams_list:
        bam: 
          - sort_and_markdup
          - obam
          - ","
        bw:
          - pileup
          - obw
          - ","
        fragments:
          - to_fragment
          - obed
          - ","
        project:
          - raw
          - project
          - ","
      params:
        blank:
          - "echo '' > {oname} "
          - "&& echo project,{project} >> {oname}"
          - "&& echo bam,{bam} >> {oname}"
          - "&& echo bw,{bw} >> {oname}"
          - "&& echo fragment,{fragments} >> {oname}"



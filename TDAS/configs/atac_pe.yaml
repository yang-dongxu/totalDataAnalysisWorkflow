env_variables:
  - &DB "${{DB}}/mm10"
  - &SCRIPTS "${{SCRIPTS}}"

seq_info_format:
- ";"
- project
- idir
- seq1
- seq2
#- seq_order
#- config_id
seq_order:
  - 1
  - 2
  - 3

config_ids: 
  - DEFAULT

DEFAULT:
  cmd_fusion_order: ['1', 2,3,"STAT"]
  cmd_name: atac_pe.cmd.txt
  log_name: log
  outdir : atac_pe
  data_name: data.yaml
  order:
    - get_fq
    - fastqc
    - trim_pe
    - bowtie2
    - sort_and_markdup
    - to_fragment
    - all
    - ocr
    - nucleosome
    - frip_cal_ocr
    - linkbw
    - metagene_nuc
    - frag_len

  order_stat: 
    - stat_log
    - stat_echo

  workflow:
    get_fq:
      need: true
      cmd_part: "1"
      outdir: "1.raw_data"
      father:
        idir:
          - raw
          - idir
        seq1:
          - raw
          - seq1
        seq2:
          - raw
          - seq2
      variables:
        oseq1: "{outdir}/{project}.R1.fq.gz"
        oseq2: "{outdir}/{project}.R2.fq.gz"
      params:
        blank:
          - "cd {idir} "
          - "&& echo {seq1} | tr , ' ' | xargs cat > {oseq1} "
          - "&& echo {seq2} | tr , ' ' | xargs cat > {oseq2} "
      outparams:
        oseq1: "{oseq1}"
        oseq2: "{oseq2}"

    fastqc:
      need: false
      outdir: 1.trimed
      path: fastqc
      father:
        iseq1:
          - get_fq
          - oseq1
        iseq2:
          - get_fq
          - oseq2
      params:
        -t: 10
        -o: "{outdir}"
        blank: 
          - "{iseq1}"
          - "{iseq2}"
      outparams:
        outdir: "{outdir}"
   
    trim_pe:
      path: " "
      check_paths: []
      cmd_part: '1'
      father:
        iseq1:
        - get_fq
        - oseq1
        iseq2:
        - get_fq
        - oseq2
      need: true
      outdir: 1.trimed
      variables:
        log: "{outdir}/{project}.{part}.log"
        oseq1: "{outdir}/{project}.trimed.R1.fq.gz"
        oseq2: "{outdir}/{project}.trimed.R2.fq.gz"
        json: "{outdir}/{project}.report.json"
        html: "{outdir}/{project}.report.html"
        threads: 4 # pe, each fastq will use threads seperately
      outparams:
        oseq1: "{oseq1}"
        oseq2: "{oseq2}"
        json: "{json}"
      params:
        blank:
          - "fastp -i {iseq1} -I {iseq2} -o {oseq1} -O {oseq2} -e 20 -j {json} -h {html} -p -R '{project}' -w {threads} -D"
          # e: average error rage
          # p: over expressed seq analyze 
          # R: title of report
          # D: deduplicate
          - " 2>&1 | tee {log}  "
          - "&& rm {iseq1} {iseq2}"

    bowtie2:
      need: true
      outdir: 2.mapping
      path: ""
      father: 
        iseq1:
          - trim_pe
          - oseq1
        iseq2:
          - trim_pe
          - oseq2
      variables:
        olog: "{outdir}/{project}.mapping.log"
        osam: "{outdir}/{project}.sam"
        obam: "{outdir}/{project}.bam"
        threads: 10
        db: *DB
      params:
        blank:
          - "bowtie2 -q -x {db}/mm10_main --no-discordant --threads {threads} -1 {iseq1} -2 {iseq2} -S {osam} 2>&1 | tee {olog} "
          - " && samtools view --threads {threads} -f 0x2 -q 30 -o {obam} {osam} "
          - " && rm {osam} "
      outparams:
        osam: "{osam}"
        obam: "{obam}"
        olog: "{olog}"
          
    sort_and_markdup: 
      need: true
      path: " "
      outdir: 3.cleanBam
      father:
        ibam:
          - bowtie2
          - obam
      variables:
        sort_bam: "{outdir}/{project}.sort"
        fixmate: "{outdir}/{project}.fix"
        fixsort: "{outdir}/{project}.fix.sort"
        cleanbam: "{outdir}/{project}_clean.bam"
      
      params:
        blank:
          - "sambamba markdup -r -t 10 {ibam} {sort_bam} &&"
          - "sambamba sort -t 10 {sort_bam} -o {cleanbam} &&"
          - "rm {sort_bam} "
    
      
      outparams:
        obam: "{cleanbam}"

    to_fragment:
      need: true
      path: " "
      outdir: 4.fragments
      father:
        ibam:
          - sort_and_markdup
          - obam 
      variables:
        obed: "{outdir}/{project}.fragment.bed"
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/bamtobedpe.sh"
      params:
        blank:
          - "bash {script} {ibam} 8 | sort -k1,1 -k2,2n | awk 'BEGIN{{OFS=\"\\t\"}}{{$2=$2+4;$3=$3-5;print $0}}'  > {obed}"
      outparams:
        obed: "{obed}"

    all:
      need: true 
      path: " "
      outdir: "5.allLen/{project}"
      father: 
        ibed:
          - to_fragment
          - obed
      variables:
        all_bed: "{outdir}/{project}.all.fragment.bed"
        thre: 250
        sp: mm
        obdg: "{outdir}/{project}.all_treat_pileup.bdg"
        opeaks: "{outdir}/{project}.all_peaks.narrowPeak"
        olog: "{outdir}/{project}.all.macs2.log"
        obw: "{outdir}/{project}.all.bw"
        db: *DB
        chromSize: "{db}/mm10_main.chrom.sizes"
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/bw_fc.sh"
        ofcbw: "{outdir}/{project}.all.fc.bw"
      params:
        blank: 
          - "cat {ibed} | awk -v l={thre} 'BEGIN{{OFS=\"\\t\"}}{{mean=int(($2+$3)/2);$2=mean-l/2;$3=mean+l/2;print $0}}' | grep -v chrM > {all_bed} &&"
          - "macs2 callpeak -f BEDPE -g {sp} --SPMR -B -q 0.05 --keep-dup 1  -n {project}.all --outdir  {outdir} -t {all_bed} 2>&1 | tee {olog} && "
          - "echo \"########## macs2 call peak  {project} done \" &&"
          - "sort -k1,1 -k2,2n {obdg} > {obdg}.tmp && "
          - "bedGraphToBigWig {obdg}.tmp {chromSize} {obw} && "
          - "rm -f  {obdg}.tmp &&"
          - "rm -f {obdg} &&"
          - "bash {script} {obw} {chromSize} {ofcbw} "
      outparams:
        ofrag: "{all_bed}"
        opeaks: "{opeaks}"
        olog: "{olog}"
        obw: "{obw}"
        ofcbw: "{ofcbw}"

    ocr: 
      need: true 
      path: " "
      outdir: "6.ocr/{project}"
      father: 
        ibed:
          - to_fragment
          - obed
      variables:
        ocr_bed: "{outdir}/{project}.ocr.fragment.bed"
        thre: 140
        sp: mm
        obdg: "{outdir}/{project}.ocr_treat_pileup.bdg"
        opeaks: "{outdir}/{project}.ocr_peaks.narrowPeak"
        olog: "{outdir}/{project}.ocr.macs2.log"
        obw: "{outdir}/{project}.ocr.bw"
        db: *DB
        chromSize: "{db}/mm10_main.chrom.sizes"
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/bw_fc.sh"
        ofcbw: "{outdir}/{project}.ocr.fc.bw"
      params:
        blank: 
          - "cat {ibed} | awk '$3-$2 < {thre}' | grep -v chrM > {ocr_bed} &&"
          - "macs2 callpeak -f BEDPE -g {sp} --SPMR -B -q 0.05 --keep-dup 1  -n {project}.ocr --outdir  {outdir} -t {ocr_bed} 2>&1 | tee {olog} && "
          - "echo \"########## macs2 call peak  {project} done \" &&"
          - "sort -k1,1 -k2,2n {obdg} > {obdg}.tmp && "
          - "bedGraphToBigWig {obdg}.tmp {chromSize} {obw} && "
          - "rm -f  {obdg}.tmp &&"
          - "rm -f {obdg} &&"
          - "bash {script} {obw} {chromSize} {ofcbw} "
      outparams:
        ofrag: "{ocr_bed}"
        opeaks: "{opeaks}"
        olog: "{olog}"
        obw: "{obw}"
        ofcbw: "{ofcbw}"

    nucleosome:
      need: true 
      path: " "
      outdir: "7.nuc/{project}"
      father: 
        ibed:
          - to_fragment
          - obed
      variables:
        nuc_bed: "{outdir}/{project}.nuc.fragment.bed"
        thre: 180
        sp: mm
        obdg: "{outdir}/{project}.nuc_treat_pileup.bdg"
        opeaks: "{outdir}/{project}.nuc_peaks.narrowPeak"
        olog: "{outdir}/{project}.nuc.macs2.log"
        obw: "{outdir}/{project}.nuc.bw"
        db: *DB
        chromSize: "{db}/mm10_main.chrom.sizes"
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/bw_fc.sh"
        ofcbw: "{outdir}/{project}.nuc.fc.bw"
      params:
        blank: 
          - "cat {ibed} | awk '$3-$2 > {thre}' | grep -v chrM > {nuc_bed} &&"
          - "macs2 callpeak -f BEDPE -g {sp} --SPMR -B -q 0.05 --keep-dup 1  -n {project}.nuc --outdir  {outdir} -t {nuc_bed}  2>&1 | tee {olog} && "
          - "echo \"##### macs2 call peak done \" &&" 
          - "sort -k1,1 -k2,2n {obdg} > {obdg}.tmp && "
          - "bedGraphToBigWig {obdg}.tmp {chromSize} {obw} && "
          - "rm -f  {obdg}.tmp &&"
          - "rm -f {obdg} &&"
          - "bash {script} {obw} {chromSize} {ofcbw} "
      outparams:
        ofrag: "{nuc_bed}"
        opeaks: "{opeaks}"
        olog: "{olog}"
        obw: "{obw}"
        ofcbw: "{ofcbw}"
      
    frip_cal_ocr:
      need: true
      cmd_part: 2
      path: " "
      outdir: "6.ocr/{project}"
      father: 
        ipeaks:
          - ocr
          - opeaks
        ibed:
          - sort_and_markdup
          - obam
      variables:
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/peak_stat.py"
        oname: "{outdir}/{project}.{part}.stat"
      params:
        blank:
          - "python {script} {ipeaks} {ibed} {oname} &" 
      outparams:
        oname: "{oname}"

    linkbw:
      need: true 
      outdir: "8.Bw"
      father:
        ocr_bw:
          - ocr
          - obw
        ocr_fcbw:
          - ocr
          - ofcbw
      params:
        blank:
          - "ln -snf {ocr_bw} {outdir} &&"
          - "ln -snf {ocr_fcbw} {outdir} "
    
    metagene_nuc:
      need: true 
      cmd_part: 3
      path: " "
      outdir: "9.metagene_nuc"
      father:
        ibw:
          - nucleosome
          - ofcbw
      variables:
        scripts_dir: *SCRIPTS
        script: "{scripts_dir}/bw_summary_bed_bins.py"
        db: *DB
        bed: "{db}/mm10.refGene.main.bed"
        oname: "{outdir}/{project}.nuc.tsv"

      params:
        "python ": "{script}"
        -b: "{bed}"
        -w: "{ibw}"
        -n: "100"
        "-5": 2000
        "-3": 2000
        "--5bins": 100
        "--3bins" : 100
        -o: "{oname}"
        blank: 
          - " &"
      outparams:
        oname: "{oname}"

    frag_len:
      need: true
      outdir: 10.frag_len
      father:
        raw_frag:
          - to_fragment
          - obed
        nuc_frag:
          - nucleosome
          - ofrag
      variables:
        raw_stat: "{outdir}/{project}.raw.length_distribution.txt"
        nuc_stat: "{outdir}/{project}.nuc.length_distribution.txt"
      params:
        blank:
          - "cat {raw_frag} | awk '{{print $3-$2}}' | sort  | uniq -c > {raw_stat} &&"
          - "cat {nuc_frag} | awk '{{print $3-$2}}' | sort  | uniq -c > {raw_stat} "


  stat: 
    stat_log:
      need: true 
      outdir: "0.stat"
      path: " "
      iparams_list:
        bowtie2:
          - bowtie2
          - olog
          - ","
        macs:
          - ocr
          - olog
          - ","
        peaks:
          - frip_cal_ocr
          - oname
          - ","

        projects:
          - raw
          - project
          - ","
      variables:
        script_dir: *SCRIPTS
        script: "{script_dir}/extract_log.py"
        oname: "{outdir}/0.basic.stats"
      params:
        "python" : "{script}"
        "-b": "{bowtie2}"
        "-m": "{macs}"
        "-l": "{peaks}"
        "-p": "{projects}"
        "-o": "{oname}"
      outparams:
        oname: "oname"

    stat_echo:
      need: true 
      outdir: "0.stat"
      path: " "
      variables:
        oname: "{outdir}/datainfo.csv"
      iparams_list:
        bam: 
          - sort_and_markdup
          - obam
          - ","
        ocrpeak:
          - ocr
          - opeaks
          - ","     
        bw:
          - ocr
          - obw
          - ","
        fcbw:
          - ocr
          - ofcbw
          - ","
        fragments:
          - to_fragment
          - obed
          - ","
        ocr_frag:
          - ocr
          - ofrag
          - ","
        project:
          - raw
          - project
          - ","
      params:
        blank:
          - "echo '' > {oname} "
          - "&& echo project,{project} >> {oname}"
          - "&& echo bam,{bam} >> {oname}"
          - "&& echo bw,{bw} >> {oname}"
          - "&& echo fcbw,{fcbw} >> {oname}"
          - "&& echo ocrpeak,{ocrpeak} >> {oname}"
          - "&& echo ocr_frag,{ocr_frag} >> {oname}"
          - "&& echo fragment,{fragments} >> {oname}"



  
